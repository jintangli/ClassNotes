Worker
worker_id, first_name, last_name, salary, joining_date, Department

bonus
worker_ref_id, bonus_date, bonus_amount

title
worker_ref_id, worker_title, affected_from

CREATE TABLE Worker (
	WORKER_ID INT NOT NULL PRIMARY KEY AUTO_INCREMENT,
	FIRST_NAME CHAR(25),
	LAST_NAME CHAR(25),
	SALARY INT(15),
	JOINING_DATE DATETIME,
	DEPARTMENT CHAR(25)
);

INSERT INTO Worker 
	(WORKER_ID, FIRST_NAME, LAST_NAME, SALARY, JOINING_DATE, DEPARTMENT) VALUES
		(001, 'Monika', 'Arora', 100000, '14-02-20 09.00.00', 'HR'),
		(002, 'Niharika', 'Verma', 80000, '14-06-11 09.00.00', 'Admin');
		
CREATE TABLE Bonus (
	WORKER_REF_ID INT,
	BONUS_AMOUNT INT(10),
	BONUS_DATE DATETIME,
	FOREIGN KEY (WORKER_REF_ID)
		REFERENCES Worker(WORKER_ID)
        ON DELETE CASCADE
);

INSERT INTO Bonus 
	(WORKER_REF_ID, BONUS_AMOUNT, BONUS_DATE) VALUES
		(001, 5000, '16-02-20'),
		(002, 3000, '16-06-11');
		
CREATE TABLE Title (
	WORKER_REF_ID INT,
	WORKER_TITLE CHAR(25),
	AFFECTED_FROM DATETIME,
	FOREIGN KEY (WORKER_REF_ID)
		REFERENCES Worker(WORKER_ID)
        ON DELETE CASCADE
);

INSERT INTO Title 
	(WORKER_REF_ID, WORKER_TITLE, AFFECTED_FROM) VALUES
 (001, 'Manager', '2016-02-20 00:00:00'),
 (002, 'Executive', '2016-06-11 00:00:00');
 
 
 
 
 
Q-1. Write An SQL Query To Fetch “FIRST_NAME” From Worker Table Using The Alias Name As <WORKER_NAME>.
	select FIRST_NAME as WORKER_NAME from Worker


Q-2. Write An SQL Query To Fetch “FIRST_NAME” From Worker Table In Upper Case.
	select upper(FIRST_NAME) from Worker
	
Q-3. Write An SQL Query To Fetch Unique Values Of DEPARTMENT From Worker Table.
	select distinct DEPARTMENT from Worker
	
Q-4. Write An SQL Query To Print First Three Characters Of  FIRST_NAME From Worker Table.
	select substring(FIRST_NAME, 1, 3) from Worker
	
Q-5. Write An SQL Query To Find The Position Of The Alphabet (‘A’) In The First Name Column ‘Amitabh’ From Worker Table.
	Select INSTR(FIRST_NAME, BINARY'a') from Worker where FIRST_NAME = 'Amitabh';
	
Q-6. Write An SQL Query To Print The FIRST_NAME From Worker Table After Removing White Spaces From The Right Side.
	Select RTRIM(FIRST_NAME) from Worker;

Q-7. Write An SQL Query To Print The DEPARTMENT From Worker Table After Removing White Spaces From The Left Side.
	select LTRIM(DEPARTMENT) from Worker

Q-8. Write An SQL Query That Fetches The Unique Values Of DEPARTMENT From Worker Table And Prints Its Length.
	select distinct length(DEPARTMENT) from Worker
	
Q-9. Write An SQL Query To Print The FIRST_NAME From Worker Table After Replacing ‘a’ With ‘A’.
	select repalce(FIRST_NAME, 'a', 'A') from Worker;
	
Q-10. Write An SQL Query To Print The FIRST_NAME And LAST_NAME From Worker Table Into A Single Column COMPLETE_NAME. A Space Char Should Separate Them.
	select concat(FIRST_NAME, ' ', LAST_NAME) as COMPLETE_NAME from Worker;
	
Q-11. Write An SQL Query To Print All Worker Details From The Worker Table Order By FIRST_NAME Ascending.
	select * from Worker order by first_name asc;
	
Q-12. Write An SQL Query To Print All Worker Details From The Worker Table Order By FIRST_NAME Ascending And DEPARTMENT Descending.
	select * from Worker order by FIRST_NAME asc, DEPARTMENT desc;
	
Q-13. Write An SQL Query To Print Details For Workers With The First Name As “Vipul” And “Satish” From Worker Table.
	select * from Workers where FIRST_NAME in ("Vipul" , "Satish");
	
Q-14. Write An SQL Query To Print Details Of Workers Excluding First Names, “Vipul” And “Satish” From Worker Table.
	select * from Workers where FIRST_NAME not in ("Vipul", "Satish");
	
Q-15. Write An SQL Query To Print Details Of Workers With DEPARTMENT Name As “Admin”.
	select * from Workers where DEPARTMENT like "Admin%";
	
Q-16. Write An SQL Query To Print Details Of The Workers Whose FIRST_NAME Contains ‘A’.
	select * from Workers where FIRST_NAME like '%a%';
	
Q-17. Write An SQL Query To Print Details Of The Workers Whose FIRST_NAME Ends With ‘A’.
	select * from Workers where FIRST_NAME like '%A';
	
Q-18. Write An SQL Query To Print Details Of The Workers Whose FIRST_NAME Ends With ‘H’ And Contains Six Alphabets.
	select * from Workers where FIRST_NAME like "_____H";

	** The '_' and '%' are wildcards in a LIKE operated statement in SQL.
	** The _ character looks for a presence of (any) one single character. If you search by columnName LIKE '_abc', 
	   it will give you result with rows having 'aabc', 'xabc', '1abc', '#abc' and so on
	** The '%' character is used for matching 0 or more number of characters. That means, 
	   if you search by columnName LIKE '%abc', it will give you result with having 'abc', 'aabc', 'xyzabc' and so on
	   
Q-19. Write An SQL Query To Print Details Of The Workers Whose SALARY Lies Between 100000 And 500000.
	select * from Workers where SALARY between 10000 and 500000;
	
Q-20. Write An SQL Query To Print Details Of The Workers Who Have Joined In Feb’2014.
	select * from Workers where year(JOINING_DATE) = 2014 and month(JOINING_DATE) = 2;
	
Q-21. Write An SQL Query To Fetch The Count Of Employees Working In The Department ‘Admin’.	
	select count(*) from Workers where DEPARTMENT = "Admin";

Q-22. Write An SQL Query To Fetch Worker Names With Salaries >= 50000 And <= 100000.
	SELECT CONCAT(FIRST_NAME, ' ', LAST_NAME) As Worker_Name, Salary
	FROM worker 
	WHERE WORKER_ID IN 
	(SELECT WORKER_ID FROM worker WHERE Salary BETWEEN 50000 AND 100000);
	
Q-23. Write An SQL Query To Fetch The No. Of Workers For Each Department In The Descending Order.
	select DEPARTMENT, count(WORKER_ID)as NO_Of_Workers
	from Workers 
	group by DEPARTMENT 
	order by NO_Of_Workers desc; 
	
Q-24. Write An SQL Query To Print Details Of The Workers Who Are Also Managers.
	select Workers.* 
	from Workers W 
	INNER JOIN Title T 
	ON W.WORKER_ID = T.WORKER_REF_ID and T.WORKER_TITLE = "Manager";
	
Q-25. Write An SQL Query To Fetch Duplicate Records Having Matching Data In Some Fields Of A Table.
	SELECT WORKER_TITLE, AFFECTED_FROM, COUNT(*)
	FROM Title
	GROUP BY WORKER_TITLE, AFFECTED_FROM
	HAVING COUNT(*) > 1;
	
Q-26. Write An SQL Query To Show Only Odd Rows From A Table.
	SELECT * FROM Worker WHERE MOD (WORKER_ID, 2) <> 0;
	
Q-27. Write An SQL Query To Show Only Even Rows From A Table.
	select * from worker where MOD (WORKER_ID, 2) = 0;
	
Q-28. Write An SQL Query To Clone A New Table From Another Table.
	SELECT * INTO WorkerClone FROM Worker;
	or
	CREATE TABLE WorkerClone LIKE Worker;
	
Q-29. Write An SQL Query To Fetch Intersecting Records Of Two Tables.
	(SELECT * FROM Worker)
	INTERSECT
	(SELECT * FROM WorkerClone);
	
Q-30. Write An SQL Query To Show Records From One Table That Another Table Does Not Have.
	SELECT * FROM Worker
	MINUS
	SELECT * FROM Title;
	
Q-31. Write An SQL Query To Show The Current Date And Time.
	SELECT CURDATE();
	
Q-32. Write An SQL Query To Show The Top N (Say 10) Records Of A Table.
	SELECT * FROM Worker ORDER BY Salary DESC LIMIT 10;
	
Q-33. Write An SQL Query To Determine The Nth (Say N=5) Highest Salary From A Table.
	SELECT Salary FROM Worker ORDER BY Salary DESC LIMIT 1,n-1;
	
Q-34. Write An SQL Query To Determine The 5th Highest Salary Without Using TOP Or Limit Method.
	SELECT Salary
	FROM Worker W1
	WHERE n-1 = (
	SELECT COUNT( DISTINCT ( W2.Salary ) )
	FROM Worker W2
	WHERE W2.Salary >= W1.Salary
	);	
	
Q-35. Write An SQL Query To Fetch The List Of Employees With The Same Salary.
	Select distinct W.WORKER_ID, W.FIRST_NAME, W.Salary 
	from Worker W, Worker W1 
	where W.Salary = W1.Salary 
	and W.WORKER_ID != W1.WORKER_ID;

Q-36. Write An SQL Query To Show The Second Highest Salary From A Table.	
	select max(Salary) from Worker 
	where Salary not in (Select max(Salary) from Worker);
	
Q-37. Write An SQL Query To Show One Row Twice In Results From A Table.
	select FIRST_NAME, DEPARTMENT from worker W where W.DEPARTMENT='HR' 
	union all 
	select FIRST_NAME, DEPARTMENT from Worker W1 where W1.DEPARTMENT='HR';
	
Q-38. Write An SQL Query To Fetch Intersecting Records Of Two Tables.
	(SELECT * FROM Worker)
	INTERSECT
	(SELECT * FROM WorkerClone);
	
Q-39. Write An SQL Query To Fetch The First 50% Records From A Table.
	SELECT *
	FROM WORKER
	WHERE WORKER_ID <= (SELECT count(WORKER_ID)/2 from Worker);
	
Q-40. Write An SQL Query To Fetch The Departments That Have Less Than Five People 
	select DEPARTMENT, count(WORKER_ID) as No_Of_Worker
	from Worker
	group by DATETIME having No_Of_Worker < 5;
	
Q-41. Write An SQL Query To Show All Departments Along With The Number Of People In There.
	SELECT DEPARTMENT, COUNT(WORKER_ID) as 'Number of Workers' 
	FROM Worker 
	GROUP BY DEPARTMENT;
	
Q-42. Write An SQL Query To Show The Last Record From A Table.
	SELECT * FROM Table ORDER BY ID DESC LIMIT 1
	
	select * 
	from Worker
	where Worker.WORKER_ID = (select max(WORKER_ID) from Worker) 

Q-43. Write An SQL Query To Fetch The First Row Of A Table.
	Select * from Worker where WORKER_ID = (SELECT min(WORKER_ID) from Worker);
	
Q-44. Write An SQL Query To Fetch The Last Five Records From A Table.
	SELECT * FROM Worker WHERE WORKER_ID <=5
	UNION
	SELECT * FROM 
	(SELECT * FROM Worker W order by W.WORKER_ID DESC) AS W1 
	WHERE W1.WORKER_ID <=5;
	
Q-45. Write An SQL Query To Print The Name Of Employees Having The Highest Salary In Each Department.
	SELECT t.DEPARTMENT,t.FIRST_NAME,t.Salary 
	from(SELECT max(Salary) as TotalSalary,DEPARTMENT 
	     from Worker 
		 group by DEPARTMENT) as TempNew 
	Inner Join Worker t on TempNew.DEPARTMENT=t.DEPARTMENT 
	and TempNew.TotalSalary=t.Salary;
	
Q-46. Write An SQL Query To Fetch Three Max Salaries From A Table.
	SELECT distinct Salary 
	from worker a 
	WHERE 3 >= (SELECT count(distinct Salary) 
				from worker b 
				WHERE a.Salary <= b.Salary) 
	order by a.Salary desc;

Q-47. Write An SQL Query To Fetch Three Min Salaries From A Table.
	SELECT distinct Salary 
	from worker a 
	WHERE 3 >= (SELECT count(distinct Salary) 
				from worker b 
				WHERE a.Salary >= b.Salary) 
	order by a.Salary desc;
	
Q-48. Write An SQL Query To Fetch Nth Max Salaries From A Table.
	SELECT distinct Salary 
	from worker a 
	WHERE n >= (SELECT count(distinct Salary) 
	            from worker b 
				WHERE a.Salary <= b.Salary) 
	order by a.Salary desc;

Q-49. Write An SQL Query To Fetch Departments Along With The Total Salaries Paid For Each Of Them.
	SELECT DEPARTMENT, sum(Salary) from worker group by DEPARTMENT;

Q-50. Write An SQL Query To Fetch The Names Of Workers Who Earn The Highest Salary.
	SELECT FIRST_NAME, SALARY from Worker WHERE SALARY=(SELECT max(SALARY) from Worker);
	

	
	
	
	
	

	